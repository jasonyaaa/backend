"""簡化AI分析表架構

Revision ID: e9e9fafefbf9
Revises: 50cb4f7496f0
Create Date: 2025-08-16 21:56:07.580978

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e9e9fafefbf9'
down_revision: Union[str, None] = '50cb4f7496f0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ai_analysis_tasks_practice_record_id'), table_name='ai_analysis_tasks')
    op.drop_constraint(op.f('fk_ai_analysis_tasks_practice_record_id_practice_records'), 'ai_analysis_tasks', type_='foreignkey')
    op.drop_column('ai_analysis_tasks', 'updated_at')
    op.drop_column('ai_analysis_tasks', 'progress')
    op.drop_column('ai_analysis_tasks', 'error_message')
    op.drop_column('ai_analysis_tasks', 'started_at')
    op.drop_column('ai_analysis_tasks', 'worker_name')
    op.drop_column('ai_analysis_tasks', 'current_step')
    op.drop_column('ai_analysis_tasks', 'practice_record_id')
    op.drop_column('ai_analysis_tasks', 'max_retries')
    op.drop_column('ai_analysis_tasks', 'retry_count')
    op.drop_column('ai_analysis_tasks', 'completed_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ai_analysis_tasks', sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('ai_analysis_tasks', sa.Column('retry_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('ai_analysis_tasks', sa.Column('max_retries', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('ai_analysis_tasks', sa.Column('practice_record_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('ai_analysis_tasks', sa.Column('current_step', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('ai_analysis_tasks', sa.Column('worker_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('ai_analysis_tasks', sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('ai_analysis_tasks', sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ai_analysis_tasks', sa.Column('progress', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('ai_analysis_tasks', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('fk_ai_analysis_tasks_practice_record_id_practice_records'), 'ai_analysis_tasks', 'practice_records', ['practice_record_id'], ['practice_record_id'])
    op.create_index(op.f('ix_ai_analysis_tasks_practice_record_id'), 'ai_analysis_tasks', ['practice_record_id'], unique=False)
    # ### end Alembic commands ###
